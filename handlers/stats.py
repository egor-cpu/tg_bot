from aiogram import Router, F
from aiogram.types import Message
from config import Config
from utils.logger import setup_logger
from database import db  
logger = setup_logger(__name__)
router = Router()


@router.message(F.text == '/stats')
async def cmd_stats(message: Message):
    user_id = message.from_user.id
    try:
        logger.debug(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å /stats –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

        stats = db.get_stats(user_id) 

        if not stats:
            await message.answer("üòï –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°—ã–≥—Ä–∞–π —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∏–≥—Ä—É!")
            return

        total_score = sum(stats['scores'])
        recent_scores = stats['scores'][:5]
        recent_str = ', '.join(str(s) for s in recent_scores) if recent_scores else '‚Äî'

        response = (
            "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
            f"üéÆ –°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: {stats['games_played']}\n"
            f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ö–æ–¥–æ–≤: {stats['correct_count']}\n"
            f"‚ùå –û—à–∏–±–æ–∫: {stats['incorrect_count']}\n"
            f"üèÖ –°—É–º–º–∞—Ä–Ω—ã–π —Å—á—ë—Ç: {total_score}\n"
            f"üïπ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–≥—Ä—ã: {recent_str}"
        )
        await message.answer(response)

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
