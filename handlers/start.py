from aiogram import Router, F
from aiogram.types import Message
from database import db 
from config import Config
from utils.logger import setup_logger

logger = setup_logger(__name__)
router = Router()

@router.message(F.text == '/start')
async def cmd_start(message: Message):
    try:
        user = message.from_user
        user_id = user.id
        username = user.username or "unknown"
        full_name = user.full_name or user.first_name or "–ì–æ—Å—Ç—å"

        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{username}, {full_name})")

        db.add_user(user_id, username, full_name)

        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {full_name}! {Config.EMOJI_MAP.get('fire', 'üî•')}\n"
            "–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã '3 –≤ —Ä—è–¥'!\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:\n"
            f"‚Ä¢ /game ‚Äî –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
            f"‚Ä¢ /stats ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        )
        await message.answer(welcome_text)

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
